# Generated by Django 2.0.8 on 2019-06-19 16:09

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttackerActionDesc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attacker_desc', models.CharField(max_length=100, verbose_name='攻击者描述')),
            ],
            options={
                'verbose_name': '攻击者行为描述',
                'db_table': 'attacker_action_desc',
            },
        ),
        migrations.CreateModel(
            name='AuditLogObject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='审计对象名称')),
                ('process', models.CharField(max_length=128, verbose_name='审计对象进程')),
                ('state', models.CharField(choices=[('RUNING', '正常'), ('STOPED', '停止'), ('APPENDING', '启动中')], default='RUNING', max_length=32, verbose_name='状态')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='审计时间')),
            ],
            options={
                'verbose_name': '审计对象',
                'db_table': 'audit_obj',
            },
        ),
        migrations.CreateModel(
            name='BackUpHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('opreate_username', models.CharField(max_length=33, verbose_name='平台操作者')),
                ('backup_path', models.CharField(max_length=33, verbose_name='备份的位置')),
                ('backup_host', models.CharField(default='Host', max_length=33, verbose_name='备份的主机')),
                ('backup_type', models.CharField(default='远程文件备份', max_length=55, verbose_name='备份类型')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '备份记录',
                'db_table': 'backup_hostory',
            },
        ),
        migrations.CreateModel(
            name='ChangeAudit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('opreate_username', models.CharField(max_length=33, verbose_name='平台操作者')),
                ('change_subject', models.CharField(blank=True, max_length=155, verbose_name='变更的主体')),
                ('change_object', models.CharField(blank=True, max_length=155, verbose_name='变更受体')),
                ('change_desc', models.CharField(max_length=155, verbose_name='变更描述')),
                ('change_stat', models.CharField(choices=[('APPENDING', 'APPENDING'), ('FAILED', 'FAILED'), ('SECCUSS', 'SECCUSS'), ('ROLLING', 'ROLLING')], default='SECCUSS', max_length=10, verbose_name='变更状态')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '平台变更记录',
                'db_table': 'change_audit',
            },
        ),
        migrations.CreateModel(
            name='ConnectManagerUserInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('username', models.CharField(blank=True, max_length=32, verbose_name='Username')),
                ('_password', models.CharField(blank=True, max_length=256, null=True, verbose_name='Password')),
                ('_identity', models.CharField(default='superuser', max_length=66, verbose_name='部件管理身份')),
                ('_token', models.CharField(blank=True, max_length=256, null=True, verbose_name='WebToken')),
                ('_private_key', models.TextField(blank=True, max_length=4096, null=True, verbose_name='SSH private key')),
                ('_public_key', models.TextField(blank=True, max_length=4096, verbose_name='SSH public key')),
                ('_protocol', models.CharField(choices=[('ssh', 'SSH'), ('http', 'HTTP'), ('https', 'HTTPS'), ('snmp', 'SNMP'), ('smb', 'SMB'), ('ftp', 'FTP'), ('smtp', 'SMTP')], default='http', max_length=32, verbose_name='管理的协议')),
                ('extra_info', models.CharField(blank=True, max_length=255, verbose_name='真实的补充信息')),
                ('is_active', models.BooleanField(default=True, verbose_name='生效')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '系统部件用户及连接信息',
                'db_table': 'sys_cop_user',
            },
        ),
        migrations.CreateModel(
            name='EffectInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('negative_impact', models.CharField(max_length=100, verbose_name='负面影响')),
            ],
            options={
                'verbose_name': '负面影响',
                'db_table': 'negative_impact',
            },
        ),
        migrations.CreateModel(
            name='InfoGoin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('had_action', models.TextField(blank=True, verbose_name='跟进动作')),
                ('state', models.CharField(choices=[('DONE', '完成'), ('IGN', '忽略'), ('ING', '跟进中'), ('NONE', '未处理')], default='ING', max_length=33, verbose_name='跟进中')),
                ('go_time', models.DateTimeField(auto_now_add=True, verbose_name='跟进时间')),
                ('go_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.ConnectManagerUserInfo', verbose_name='事态跟进用户')),
            ],
            options={
                'verbose_name': '信息事件跟进',
                'db_table': 'infosec_detail',
            },
        ),
        migrations.CreateModel(
            name='InfoSecEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('descover_time', models.DateTimeField(verbose_name='发现时间')),
                ('happend_time', models.DateTimeField(verbose_name='事件发生时间')),
                ('reporter', models.CharField(max_length=100, verbose_name='报告提交者用户名')),
                ('infosysname', models.CharField(max_length=100, verbose_name='信息系统名称')),
                ('describtion', models.TextField(verbose_name='信息描述')),
                ('info_type', models.CharField(choices=[('attack', '攻击事件'), ('bug', '故障事件'), ('destory', '灾害事件')], default='attack', max_length=50)),
                ('info_level', models.IntegerField(choices=[(1, '一般'), (2, '重大'), (3, '特别重大')], default=1)),
                ('impact_area', models.CharField(choices=[('attack', '攻击事件'), ('bug', '故障事件'), ('destory', '灾害事件')], default='Guest', max_length=50)),
                ('plan_action', models.TextField(blank=True, verbose_name='计划采取的行动')),
                ('report_time', models.DateTimeField(auto_now_add=True, verbose_name='报告时间')),
            ],
            options={
                'verbose_name': '信息事件',
                'db_table': 'infosec_event',
            },
        ),
        migrations.CreateModel(
            name='ObjProcess',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('process_name', models.CharField(max_length=255, verbose_name='进程名称')),
                ('process', models.CharField(max_length=55, verbose_name='进程过滤')),
                ('process_type', models.CharField(choices=[('plat', '平台策略'), ('system', '系统管理策略'), ('security', '安全机制策略'), ('audit', '审计机制策略')], max_length=100, verbose_name='进程类型')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '特定的运行进程',
                'db_table': 'sys_process',
            },
        ),
        migrations.CreateModel(
            name='PolicyAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('action_name', models.CharField(blank=True, max_length=233, verbose_name='策略动作名称')),
                ('_connect_agent', models.TextField(blank=True, verbose_name='系统部件的host')),
                ('_connect_kwargs', models.TextField(blank=True, verbose_name='系统部件关联的信息|url参数等')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '策略动作',
                'db_table': 'policy_action',
            },
        ),
        migrations.CreateModel(
            name='PolicyActionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_type', models.CharField(choices=[('json', 'json'), ('html', 'html'), ('txt', 'txt')], max_length=55, verbose_name='响应过滤类型')),
                ('response', models.TextField(blank=True, verbose_name='响应内容')),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('policyaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_policy_history', to='server.PolicyAction')),
            ],
            options={
                'verbose_name': '策略下发执行历史',
                'db_table': 'action_history',
            },
        ),
        migrations.CreateModel(
            name='PolicyBench',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='策略基准名称')),
                ('desc', models.CharField(max_length=255, verbose_name='策略基准描述')),
                ('type', models.CharField(choices=[('plat', '平台策略'), ('system', '系统管理策略'), ('security', '安全机制策略'), ('audit', '审计机制策略')], max_length=50, verbose_name='基准类型')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '策略基准',
                'db_table': 'policy_bench',
            },
        ),
        migrations.CreateModel(
            name='PolicyRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('plat_username', models.CharField(blank=True, max_length=255, verbose_name='关联的平台用户')),
                ('active', models.BooleanField(default=True, verbose_name='生效')),
            ],
            options={
                'verbose_name': '策略规则',
                'db_table': 'policy_rule',
            },
        ),
        migrations.CreateModel(
            name='ProcessAuditLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_stat', models.CharField(choices=[('RUNING', 'RUNING'), ('STOPED', 'STOPED'), ('APPENDING', 'APPENDING')], max_length=55, verbose_name='进程状态')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='监控时间')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_audit', to='server.ObjProcess', verbose_name='进程监控')),
            ],
            options={
                'verbose_name': '进程监控周期',
                'db_table': 'process_audit',
            },
        ),
        migrations.CreateModel(
            name='SysManagerCopInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('uniq_flag', models.CharField(max_length=155, unique=True, verbose_name='系统部件唯一标识')),
                ('name', models.CharField(max_length=128, verbose_name='系统部件名称')),
                ('ip', models.GenericIPAddressField(verbose_name='ip')),
                ('type', models.CharField(default='CommonHost', max_length=128, verbose_name='系统部件的类型')),
                ('level', models.CharField(default='High', max_length=128, verbose_name='安全等级')),
                ('pushed', models.BooleanField(default=True, verbose_name='接入')),
                ('os', models.CharField(default='Linux', max_length=128, verbose_name='操作系统')),
                ('mac', models.CharField(blank=True, max_length=128, verbose_name='mac地址')),
                ('mac_vendor', models.CharField(blank=True, max_length=128, verbose_name='厂家')),
                ('up', models.BooleanField(default=True, verbose_name='存活状态')),
                ('extra', models.TextField(default='', verbose_name='额外补充信息')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('managers', models.ManyToManyField(related_name='sys_cop_conn_users', to='server.ConnectManagerUserInfo', verbose_name='系统部件管理用户')),
            ],
            options={
                'verbose_name': '安全设备系统部件信息',
                'db_table': 'sys_cop_info',
            },
        ),
        migrations.CreateModel(
            name='SystemPolicyCentralizedManagement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('sys_except_handle', models.CharField(default='WAF设备CYA-6000存在3条告警信息', max_length=155, verbose_name='异常处理的信息')),
                ('sys_stat', models.CharField(choices=[('RUNING', 'RUNING'), ('STOPED', 'STOPED'), ('APPENDING', 'APPENDING')], default='RUNING', max_length=33, verbose_name='系统部件状态')),
                ('sys_dbackup', models.CharField(default='数据最新于2019-4-27 0:0:2备份', max_length=32, verbose_name='系统备份策略描述')),
                ('sys_user', models.CharField(default='admin001', max_length=32, verbose_name='系统连接用户')),
            ],
            options={
                'verbose_name': '系统策略集中管理',
                'db_table': 'policy_cen_mg',
            },
        ),
        migrations.CreateModel(
            name='AuditPolicyCentralizedManagement',
            fields=[
                ('systempolicycentralizedmanagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.SystemPolicyCentralizedManagement')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '审计机制集中管理',
                'db_table': 'aduit_cen_mg',
            },
            bases=('server.systempolicycentralizedmanagement',),
        ),
        migrations.CreateModel(
            name='SecurityPolicyCentralizedManagement',
            fields=[
                ('systempolicycentralizedmanagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.SystemPolicyCentralizedManagement')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '安全机制集中管理',
                'db_table': 'sec_cen_mg',
            },
            bases=('server.systempolicycentralizedmanagement',),
        ),
        migrations.AddField(
            model_name='systempolicycentralizedmanagement',
            name='cop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cop_center', to='server.SysManagerCopInfo', verbose_name='系统部件'),
        ),
        migrations.AddField(
            model_name='policyrule',
            name='belong_cop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policy_rule_cop', to='server.SysManagerCopInfo'),
        ),
        migrations.AddField(
            model_name='policyrule',
            name='policy_action',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policy_rule_cop', to='server.PolicyAction', verbose_name='规则执行指定'),
        ),
        migrations.AddField(
            model_name='policyrule',
            name='policy_bench',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policy_bench_rule', to='server.PolicyBench'),
        ),
        migrations.AddField(
            model_name='policyaction',
            name='belong_cop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cop_policy_conn', to='server.SysManagerCopInfo'),
        ),
        migrations.AddField(
            model_name='policyaction',
            name='cop_user',
            field=models.ManyToManyField(blank=True, related_name='policy_action_users', to='server.ConnectManagerUserInfo', verbose_name='关联的部件用户'),
        ),
        migrations.AddField(
            model_name='objprocess',
            name='cop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sys_cop_process', to='server.SysManagerCopInfo', verbose_name='系统部件'),
        ),
        migrations.AddField(
            model_name='objprocess',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sys_user_process', to='server.ConnectManagerUserInfo', verbose_name='系统部件用户'),
        ),
        migrations.AddField(
            model_name='infosecevent',
            name='attacker_descs',
            field=models.ManyToManyField(related_name='info_conn_impact', to='server.SysManagerCopInfo', verbose_name='负面影响列表'),
        ),
        migrations.AddField(
            model_name='infosecevent',
            name='impact_cops',
            field=models.ManyToManyField(related_name='info_conn_cops', to='server.SysManagerCopInfo', verbose_name='受影响的资产列表'),
        ),
        migrations.AddField(
            model_name='infosecevent',
            name='negative_impacts',
            field=models.ManyToManyField(related_name='info_conn_attack', to='server.AttackerActionDesc', verbose_name='攻击者行为描述'),
        ),
        migrations.AddField(
            model_name='infogoin',
            name='info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info_going', to='server.InfoSecEvent', verbose_name='事件'),
        ),
        migrations.AddField(
            model_name='auditlogobject',
            name='cop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cop_to_audit', to='server.SysManagerCopInfo', verbose_name='审计对象部件'),
        ),
    ]
