# Generated by Django 2.0.12 on 2019-07-09 09:45

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttackerActionDesc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attacker_desc', models.CharField(max_length=100, verbose_name='攻击者描述')),
            ],
            options={
                'verbose_name': '攻击者行为描述',
                'db_table': 'attacker_action_desc',
            },
        ),
        migrations.CreateModel(
            name='AuditChangeAudit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '审计变更管理',
            },
        ),
        migrations.CreateModel(
            name='AuditEventResponseSolve',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '审计事件响应处置',
            },
        ),
        migrations.CreateModel(
            name='AuditLogObject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='审计对象名称')),
                ('table_name', models.CharField(blank=True, max_length=128, verbose_name='表名')),
                ('state', models.CharField(choices=[('RUNING', '正常'), ('STOPED', '停止'), ('APPENDING', '启动中')], default='RUNING', max_length=32, verbose_name='状态')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '审计对象',
                'db_table': 'audit_obj',
            },
        ),
        migrations.CreateModel(
            name='AuditPolicyCentralizedManagement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '审计策略集中管理',
            },
        ),
        migrations.CreateModel(
            name='AuditPolicyRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '审计管理策略',
            },
        ),
        migrations.CreateModel(
            name='AuditRunningMonitor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '审计机制变更管理',
            },
        ),
        migrations.CreateModel(
            name='BackUpHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('opreate_username', models.CharField(default='plat', max_length=33, verbose_name='备份用户')),
                ('backup_path', models.CharField(max_length=33, verbose_name='备份的位置')),
                ('backup_host', models.CharField(default='Host', max_length=33, verbose_name='备份的主机')),
                ('backup_type', models.CharField(default='远程文件备份', max_length=55, verbose_name='备份类型')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '系统备份',
                'db_table': 'backup_hostory',
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='ChangeAudit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('opreate_username', models.CharField(help_text='默认为操作员', max_length=33, verbose_name='操作员')),
                ('change_type', models.CharField(choices=[('system', '系统管理策略'), ('security', '安全机制策略'), ('audit', '审计机制策略')], default='system', max_length=33, verbose_name='变更类型')),
                ('change_name', models.CharField(blank=True, default=None, max_length=155, verbose_name='变更名')),
                ('change_obj', models.CharField(blank=True, default=None, max_length=155, verbose_name='变更对象')),
                ('change_desc', models.CharField(blank=True, default=None, max_length=155, verbose_name='变更描述')),
                ('change_stat', models.CharField(choices=[('APPENDING', '变更中'), ('FAILED', '变更失败'), ('SECCUSS', '变更成功'), ('ROLLING', '变更回滚')], default='SECCUSS', max_length=10, verbose_name='变更状态')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='审计时间')),
            ],
            options={
                'verbose_name': '平台变更记录',
                'db_table': 'change_audit',
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='ConnectManagerUserInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, verbose_name='用户机制名')),
                ('username', models.CharField(blank=True, max_length=32, verbose_name='Username')),
                ('_password', models.CharField(blank=True, max_length=256, null=True, verbose_name='Password')),
                ('_identity', models.CharField(choices=[('sysuser', '系统管理员'), ('secuser', '安全管理员'), ('auduser', '审计管理员'), ('superuser', '特权管理员')], default='superuser', max_length=66, verbose_name='部件管理身份')),
                ('_token', models.CharField(blank=True, max_length=256, null=True, verbose_name='WebToken')),
                ('_private_key', models.TextField(blank=True, max_length=4096, null=True, verbose_name='SSH private key')),
                ('_public_key', models.TextField(blank=True, max_length=4096, verbose_name='SSH public key')),
                ('_protocol', models.CharField(choices=[('ssh', 'SSH'), ('http', 'HTTP'), ('https', 'HTTPS'), ('snmp', 'SNMP'), ('smb', 'SMB'), ('ftp', 'FTP'), ('smtp', 'SMTP')], default='http', max_length=32, verbose_name='管理的协议')),
                ('email', models.CharField(default='test@example.com', max_length=100, verbose_name='默认登记邮箱')),
                ('create_user', models.CharField(default='admin001', max_length=100, verbose_name='创建者')),
                ('extra_info', models.CharField(blank=True, max_length=255, verbose_name='真实的补充信息')),
                ('is_active', models.BooleanField(default=True, verbose_name='生效')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '系统部件用户及连接信息',
                'db_table': 'sys_cop_user',
            },
        ),
        migrations.CreateModel(
            name='EffectInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('negative_impact', models.CharField(max_length=100, verbose_name='负面影响')),
            ],
            options={
                'verbose_name': '负面影响',
                'db_table': 'negative_impact',
            },
        ),
        migrations.CreateModel(
            name='InfoGoin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('go_user', models.CharField(max_length=33, verbose_name='处理用户')),
                ('had_action', models.TextField(blank=True, verbose_name='跟进动作')),
                ('state', models.CharField(choices=[('DONE', '完成'), ('IGN', '忽略'), ('ING', '跟进中'), ('NONE', '未处理')], default='ING', max_length=33, verbose_name='跟进中')),
                ('go_time', models.DateTimeField(auto_now_add=True, verbose_name='跟进时间')),
            ],
            options={
                'verbose_name': '信息事件跟进',
                'db_table': 'infosec_detail',
                'ordering': ('-go_time',),
            },
        ),
        migrations.CreateModel(
            name='InfoSecEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('descover_time', models.DateTimeField(verbose_name='发现时间')),
                ('happend_time', models.DateTimeField(verbose_name='事件发生时间')),
                ('reporter', models.CharField(max_length=100, verbose_name='报告提交者用户名')),
                ('infosysname', models.CharField(default='', max_length=200, verbose_name='事件名称')),
                ('extra', models.CharField(default='', max_length=200, verbose_name='额外补充字段')),
                ('describtion', models.TextField(verbose_name='信息描述')),
                ('info_type', models.CharField(choices=[('attack', '攻击事件'), ('bug', '故障事件'), ('destory', '灾害事件')], default='attack', max_length=50, verbose_name='事件类型')),
                ('info_level', models.IntegerField(choices=[(1, '一般'), (2, '重大'), (3, '特别重大')], default=1, verbose_name='安全等级')),
                ('plat_etype', models.CharField(choices=[('system', '系统管理策略'), ('security', '安全机制策略'), ('audit', '审计机制策略')], default='system', max_length=50, verbose_name='平台故障事件分类')),
                ('plan_action', models.TextField(blank=True, verbose_name='计划采取的行动')),
                ('report_time', models.DateTimeField(auto_now_add=True, verbose_name='报告时间')),
                ('effect_info', models.ManyToManyField(blank=True, default=None, related_name='info_conn_effect', to='mgsd.EffectInfo', verbose_name='负面影响')),
            ],
            options={
                'verbose_name': '信息事件',
                'db_table': 'infosec_event',
                'ordering': ('-happend_time',),
            },
        ),
        migrations.CreateModel(
            name='ObjProcess',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('process_name', models.CharField(max_length=255, verbose_name='进程名称')),
                ('process', models.CharField(max_length=55, verbose_name='进程过滤')),
                ('process_type', models.CharField(choices=[('system', '系统管理策略'), ('security', '安全机制策略'), ('audit', '审计机制策略')], max_length=100, verbose_name='进程类型')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '特定的运行进程',
                'db_table': 'sys_process',
            },
        ),
        migrations.CreateModel(
            name='PolicyAction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('action_name', models.CharField(blank=True, max_length=233, verbose_name='策略动作名称')),
                ('_connect_agent', models.TextField(blank=True, verbose_name='系统部件的host')),
                ('_connect_kwargs', models.TextField(blank=True, verbose_name='系统部件关联的信息|url参数等')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('date_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '策略动作',
                'db_table': 'policy_action',
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='PolicyActionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_type', models.CharField(choices=[('json', 'json'), ('html', 'html'), ('txt', 'txt')], max_length=55, verbose_name='响应过滤类型')),
                ('response', models.TextField(blank=True, verbose_name='响应内容')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='下发时间')),
                ('policyaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_policy_history', to='mgsd.PolicyAction')),
            ],
            options={
                'verbose_name': '策略下发执行历史',
                'db_table': 'action_history',
                'ordering': ('-add_time',),
            },
        ),
        migrations.CreateModel(
            name='PolicyBench',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='策略基准名称')),
                ('desc', models.CharField(max_length=255, verbose_name='策略基准描述')),
                ('type', models.CharField(choices=[('system', '系统管理策略'), ('security', '安全机制策略'), ('audit', '审计机制策略')], max_length=50, verbose_name='基准类型')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '策略基准',
                'db_table': 'policy_bench',
            },
        ),
        migrations.CreateModel(
            name='PolicyRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('plat_username', models.CharField(blank=True, max_length=255, verbose_name='关联的平台用户')),
                ('active', models.BooleanField(default=True, verbose_name='生效')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
            ],
            options={
                'verbose_name': '策略规则',
                'db_table': 'policy_rule',
                'ordering': ('-add_time',),
            },
        ),
        migrations.CreateModel(
            name='ProcessAuditLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_stat', models.CharField(choices=[('RUNING', '运行中'), ('STOPED', '已停止'), ('APPENDING', '监控中')], max_length=55, verbose_name='进程状态')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='监控时间')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_audit', to='mgsd.ObjProcess', verbose_name='进程监控')),
            ],
            options={
                'verbose_name': '进程监控周期',
                'db_table': 'process_audit',
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='SecurityChangeAudit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '安全变更管理',
            },
        ),
        migrations.CreateModel(
            name='SecurityEventResponseSolve',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '安全事件响应处置',
            },
        ),
        migrations.CreateModel(
            name='SecurityPolicyCentralizedManagement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '安全策略集中管理',
            },
        ),
        migrations.CreateModel(
            name='SecurityPolicyRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '安全管理策略',
            },
        ),
        migrations.CreateModel(
            name='SecurityRunningMonitor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '安全机制变更管理',
            },
        ),
        migrations.CreateModel(
            name='SysManagerCopInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('uniq_flag', models.CharField(max_length=155, unique=True, verbose_name='系统部件唯一标识')),
                ('name', models.CharField(max_length=128, verbose_name='系统部件名称')),
                ('ip', models.GenericIPAddressField(verbose_name='ip')),
                ('type', models.CharField(choices=[('CommonServer', '普通服务器、终端设备操作系统'), ('ServerDb', '服务器数据库管理系统'), ('Softd', '应用软件系统'), ('Openvas', '网络脆弱性扫描系统'), ('Netd', '路由器交换机网络设备'), ('Firewalld', '防火墙系统'), ('IDS/IPS', '入侵检测/防御系统'), ('MISP', '统一威胁管理系统'), ('Gelid', '网络和终端隔离设备'), ('NetdWorkDivice', '联网办公设备'), ('NetdPhisicalDivice', '联网的物理安全设施'), ('Others', '其他')], max_length=128, verbose_name='系统部件的类型')),
                ('level', models.CharField(choices=[('High', '高'), ('Midium', '中'), ('Low', '低')], default='High', max_length=128, verbose_name='安全等级')),
                ('pushed', models.BooleanField(default=False, verbose_name='接入')),
                ('os', models.CharField(default='Linux', max_length=128, verbose_name='操作系统')),
                ('mac', models.CharField(blank=True, max_length=128, verbose_name='mac地址')),
                ('mac_vendor', models.CharField(blank=True, max_length=128, verbose_name='厂家')),
                ('up', models.BooleanField(default=True, verbose_name='存活状态')),
                ('extra', models.TextField(blank=True, verbose_name='额外补充信息')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='部件接入时间')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='部件信息修改时间')),
                ('managers', models.ManyToManyField(blank=True, related_name='sys_cop_conn_users', to='mgsd.ConnectManagerUserInfo', verbose_name='系统部件管理用户')),
            ],
            options={
                'verbose_name': '安全设备系统部件信息',
                'db_table': 'sys_cop_info',
            },
        ),
        migrations.CreateModel(
            name='SystemChangeAudit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '系统变更管理',
            },
        ),
        migrations.CreateModel(
            name='SystemEventResponseSolve',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '系统事件响应处置',
            },
        ),
        migrations.CreateModel(
            name='SystemPolicyCentralizedManagement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '系统策略集中管理',
            },
        ),
        migrations.CreateModel(
            name='SystemPolicyRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '系统管理策略',
            },
        ),
        migrations.CreateModel(
            name='SystemRunningMonitor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': '系统部件运行监控',
            },
        ),
        migrations.AddField(
            model_name='policyrule',
            name='belong_cop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policy_rule_cop', to='mgsd.SysManagerCopInfo', verbose_name='部件应用'),
        ),
        migrations.AddField(
            model_name='policyrule',
            name='policy_action',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policy_rule_cop', to='mgsd.PolicyAction', verbose_name='规则执行指定'),
        ),
        migrations.AddField(
            model_name='policyrule',
            name='policy_bench',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policy_bench_rule', to='mgsd.PolicyBench', verbose_name='策略基准'),
        ),
        migrations.AddField(
            model_name='policyaction',
            name='belong_cop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cop_policy_conn', to='mgsd.SysManagerCopInfo', verbose_name='部件应用'),
        ),
        migrations.AddField(
            model_name='policyaction',
            name='cop_user',
            field=models.ManyToManyField(blank=True, related_name='policy_action_users', to='mgsd.ConnectManagerUserInfo', verbose_name='关联的部件用户'),
        ),
        migrations.AddField(
            model_name='objprocess',
            name='cop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sys_cop_process', to='mgsd.SysManagerCopInfo', verbose_name='系统部件'),
        ),
        migrations.AddField(
            model_name='infosecevent',
            name='impact_cops',
            field=models.ManyToManyField(blank=True, related_name='info_conn_cops', to='mgsd.SysManagerCopInfo', verbose_name='受影响的资产列表'),
        ),
        migrations.AddField(
            model_name='infosecevent',
            name='info_source',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='info_source', to='mgsd.SysManagerCopInfo', verbose_name='信息来源'),
        ),
        migrations.AddField(
            model_name='infosecevent',
            name='negative_impacts',
            field=models.ManyToManyField(related_name='info_conn_attack', to='mgsd.AttackerActionDesc', verbose_name='攻击者行为描述'),
        ),
        migrations.AddField(
            model_name='infogoin',
            name='info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info_going', to='mgsd.InfoSecEvent', verbose_name='事件'),
        ),
        migrations.AddField(
            model_name='auditlogobject',
            name='cop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cop_to_audit', to='mgsd.SysManagerCopInfo', verbose_name='审计对象部件'),
        ),
        migrations.AddField(
            model_name='auditlogobject',
            name='managers',
            field=models.ManyToManyField(blank=True, related_name='audit_conn_users', to='mgsd.ConnectManagerUserInfo', verbose_name='审计管理用户'),
        ),
    ]
